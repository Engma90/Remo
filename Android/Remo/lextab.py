# lextab.py. This file automatically created by PLY (version 3.5). Don't edit!
_tabversion   = '3.5'
_lextokens    = {'DEFAULT': 1, 'XOR_ASSIGN': 1, 'TRUE': 1, 'CHAR': 1, 'SWITCH': 1, 'LTEQ': 1, 'WHILE': 1, 'NAME': 1, 'RETURN': 1, 'CATCH': 1, 'INSTANCEOF': 1, 'NEW': 1, 'ENUM': 1, 'ABSTRACT': 1, 'NATIVE': 1, 'CHAR_LITERAL': 1, 'NUM': 1, 'LSHIFT_ASSIGN': 1, 'OR': 1, 'OR_ASSIGN': 1, 'IF': 1, 'CASE': 1, 'PACKAGE': 1, 'RRSHIFT_ASSIGN': 1, 'MINUSMINUS': 1, 'FINAL': 1, 'AND': 1, 'FLOAT': 1, 'CLASS': 1, 'EQ': 1, 'FOR': 1, 'SYNCHRONIZED': 1, 'THIS': 1, 'DO': 1, 'EXTENDS': 1, 'REMAINDER_ASSIGN': 1, 'NEQ': 1, 'TIMES_ASSIGN': 1, 'ASSERT': 1, 'LINE_COMMENT': 1, 'BOOLEAN': 1, 'TRANSIENT': 1, 'RSHIFT': 1, 'SHORT': 1, 'BLOCK_COMMENT': 1, 'CONTINUE': 1, 'VOLATILE': 1, 'RSHIFT_ASSIGN': 1, 'PRIVATE': 1, 'RRSHIFT': 1, 'LSHIFT': 1, 'PLUSPLUS': 1, 'DOUBLE': 1, 'TRY': 1, 'VOID': 1, 'IMPLEMENTS': 1, 'IMPORT': 1, 'SUPER': 1, 'THROWS': 1, 'ELSE': 1, 'MINUS_ASSIGN': 1, 'PLUS_ASSIGN': 1, 'INT': 1, 'BREAK': 1, 'DIVIDE_ASSIGN': 1, 'BYTE': 1, 'THROW': 1, 'PROTECTED': 1, 'STRING_LITERAL': 1, 'LONG': 1, 'GTEQ': 1, 'FINALLY': 1, 'PUBLIC': 1, 'NULL': 1, 'STRICTFP': 1, 'FALSE': 1, 'AND_ASSIGN': 1, 'STATIC': 1, 'ELLIPSIS': 1, 'INTERFACE': 1}
_lexreflags   = 0
_lexliterals  = '()+-*/=?:,.^|&~!=[]{};<>@%'
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_LINE_COMMENT>//.*?\\n)|(?P<t_BLOCK_COMMENT>/\\*(.|\\n)*?\\*/)|(?P<t_NAME>[A-Za-z_$][A-Za-z0-9_$]*)|(?P<t_newline>\\n+)|(?P<t_newline2>(\\r\\n)+)|(?P<t_NUM>\\.?[0-9][0-9eE_lLdDa-fA-F.xXpP]*)|(?P<t_CHAR_LITERAL>\\\'([^\\\\\\n]|(\\\\.))*?\\\')|(?P<t_STRING_LITERAL>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_ELLIPSIS>\\.\\.\\.)|(?P<t_MINUSMINUS>\\-\\-)|(?P<t_OR>\\|\\|)|(?P<t_RRSHIFT_ASSIGN>>>>=)|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_XOR_ASSIGN>\\^=)|(?P<t_RSHIFT_ASSIGN>>>=)|(?P<t_RRSHIFT>>>>)|(?P<t_OR_ASSIGN>\\|=)|(?P<t_TIMES_ASSIGN>\\*=)|(?P<t_PLUS_ASSIGN>\\+=)|(?P<t_LSHIFT_ASSIGN><<=)|(?P<t_REMAINDER_ASSIGN>%=)|(?P<t_LSHIFT><<)|(?P<t_MINUS_ASSIGN>-=)|(?P<t_AND_ASSIGN>&=)|(?P<t_DIVIDE_ASSIGN>/=)|(?P<t_AND>&&)|(?P<t_RSHIFT>>>)|(?P<t_LTEQ><=)|(?P<t_GTEQ>>=)|(?P<t_NEQ>!=)|(?P<t_EQ>==)', [None, ('t_LINE_COMMENT', 'LINE_COMMENT'), ('t_BLOCK_COMMENT', 'BLOCK_COMMENT'), None, ('t_NAME', 'NAME'), ('t_newline', 'newline'), ('t_newline2', 'newline2'), None, (None, 'NUM'), (None, 'CHAR_LITERAL'), None, None, (None, 'STRING_LITERAL'), None, None, (None, 'ELLIPSIS'), (None, 'MINUSMINUS'), (None, 'OR'), (None, 'RRSHIFT_ASSIGN'), (None, 'PLUSPLUS'), (None, 'XOR_ASSIGN'), (None, 'RSHIFT_ASSIGN'), (None, 'RRSHIFT'), (None, 'OR_ASSIGN'), (None, 'TIMES_ASSIGN'), (None, 'PLUS_ASSIGN'), (None, 'LSHIFT_ASSIGN'), (None, 'REMAINDER_ASSIGN'), (None, 'LSHIFT'), (None, 'MINUS_ASSIGN'), (None, 'AND_ASSIGN'), (None, 'DIVIDE_ASSIGN'), (None, 'AND'), (None, 'RSHIFT'), (None, 'LTEQ'), (None, 'GTEQ'), (None, 'NEQ'), (None, 'EQ')])]}
_lexstateignore = {'INITIAL': ' \t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
